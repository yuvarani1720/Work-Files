yuvarani@NASSCHNGY-LP215:~$ cd /mnt/c/Users/Saravanan\ Sivasankar/Desktop/SELECT/PERSONAL/
yuvarani@NASSCHNGY-LP215:/mnt/c/Users/Saravanan Sivasankar/Desktop/SELECT/PERSONAL$
root@NASSCHNGY-LP215:/mnt/c/Users/Saravanan Sivasankar/Desktop/SELECT/PERSONAL# ssh -i docker1.pem ec2-user@43.204.25.117
The authenticity of host '43.204.25.117 (43.204.25.117)' can't be established.
ED25519 key fingerprint is SHA256:zTypbb3/kZhLpaNolnEVgLnUJSdbiLf09QqbSHdx51w.
This host key is known by the following other names/addresses:
    ~/.ssh/known_hosts:24: [hashed name]
    ~/.ssh/known_hosts:26: [hashed name]
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '43.204.25.117' (ED25519) to the list of known hosts.

A newer release of "Amazon Linux" is available.
  Version 2023.9.20250929:
Run "/usr/bin/dnf check-release-update" for full release and version update info
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Thu Oct  2 14:10:13 2025 from 49.37.216.58
[ec2-user@ip-172-31-45-2 ~]$
[ec2-user@ip-172-31-45-2 ~]$ pwd
/home/ec2-user
[ec2-user@ip-172-31-45-2 ~]$ ls
[ec2-user@ip-172-31-45-2 ~]$ mkdir my-app
[ec2-user@ip-172-31-45-2 ~]$ cd my-app/
[ec2-user@ip-172-31-45-2 my-app]$ nano app.py
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ cat app.py
from flask import Flask
app = Flask(__name__)

@app.route('/')
def home():
    return """
    <html>
        <body>
            <h1>Basic Details</h1>
            <p><strong>Name:</strong> John Doe</p>
            <p><strong>Age:</strong> 30</p>
            <p><strong>Location:</strong> New York, USA</p>
            <p><strong>Profession:</strong> Software Developer</p>
        </body>
    </html>
    """

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)

[ec2-user@ip-172-31-45-2 my-app]$ nano requirements.txt
[ec2-user@ip-172-31-45-2 my-app]$ nano Dockerfile
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ nano docker_compose.yml
[ec2-user@ip-172-31-45-2 my-app]$ client_loop: send disconnect: Broken pipe
root@NASSCHNGY-LP215:/mnt/c/Users/Saravanan Sivasankar/Desktop/SELECT/PERSONAL# ssh -i docker1.pem ec2-user@43.204.25.117

A newer release of "Amazon Linux" is available.
  Version 2023.9.20250929:
Run "/usr/bin/dnf check-release-update" for full release and version update info
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Sat Oct 11 20:42:56 2025 from 49.37.220.194
[ec2-user@ip-172-31-45-2 ~]$ ls
my-app
[ec2-user@ip-172-31-45-2 ~]$ cd my-app/
[ec2-user@ip-172-31-45-2 my-app]$ ls
Dockerfile  app.py  docker_compose.yml  requirements.txt
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ docker-compose up --build
-bash: docker-compose: command not found
[ec2-user@ip-172-31-45-2 my-app]$ sudo su
[root@ip-172-31-45-2 my-app]#
[root@ip-172-31-45-2 my-app]# docker-compose up --build
bash: docker-compose: command not found
[root@ip-172-31-45-2 my-app]# docker compose up --build
no configuration file provided: not found
[root@ip-172-31-45-2 my-app]# exit
exit
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ docker compose up --build
unknown flag: --build
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., 0.12.1)
  checkpoint  Manage checkpoints
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  config      Manage Swarm configs
  node        Manage Swarm nodes
  secret      Manage Swarm secrets
  service     Manage Swarm services
  stack       Manage Swarm stacks
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/ec2-user/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/ec2-user/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/ec2-user/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/ec2-user/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/


[ec2-user@ip-172-31-45-2 my-app]$ cd ~
[ec2-user@ip-172-31-45-2 ~]$ mkdir -p ~/.docker/cli-plugins
[ec2-user@ip-172-31-45-2 ~]$
[ec2-user@ip-172-31-45-2 ~]$ curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 58.5M  100 58.5M    0     0   332M      0 --:--:-- --:--:-- --:--:--  332M
[ec2-user@ip-172-31-45-2 ~]$
[ec2-user@ip-172-31-45-2 ~]$ chmod +x ~/.docker/cli-plugins/docker-compose
[ec2-user@ip-172-31-45-2 ~]$
[ec2-user@ip-172-31-45-2 ~]$ docker compose version
Docker Compose version v2.24.6
[ec2-user@ip-172-31-45-2 ~]$
[ec2-user@ip-172-31-45-2 ~]$ sudo reboot

Broadcast message from root@ip-172-31-45-2.ap-south-1.compute.internal on pts/3 (Sat 2025-10-11 20:52:07 UTC):

The system will reboot now!

[ec2-user@ip-172-31-45-2 ~]$ Connection to 43.204.25.117 closed by remote host.
Connection to 43.204.25.117 closed.
root@NASSCHNGY-LP215:/mnt/c/Users/Saravanan Sivasankar/Desktop/SELECT/PERSONAL# ssh -i docker1.pem ec2-user@43.204.25.117
ssh: connect to host 43.204.25.117 port 22: Connection refused
root@NASSCHNGY-LP215:/mnt/c/Users/Saravanan Sivasankar/Desktop/SELECT/PERSONAL#
[ec2-user@ip-172-31-45-2 ~]$ cd my-app/
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ docker compose up --build
no configuration file provided: not found
[ec2-user@ip-172-31-45-2 my-app]$ docker compose version
Docker Compose version v2.24.6
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ ls
Dockerfile  app.py  docker_compose.yml  requirements.txt
[ec2-user@ip-172-31-45-2 my-app]$ ls -lth
total 16K
-rw-r--r--. 1 ec2-user ec2-user 153 Oct 11 20:39 docker_compose.yml
-rw-r--r--. 1 ec2-user ec2-user 391 Oct 11 20:39 Dockerfile
-rw-r--r--. 1 ec2-user ec2-user  14 Oct 11 20:39 requirements.txt
-rw-r--r--. 1 ec2-user ec2-user 477 Oct 11 20:38 app.py
[ec2-user@ip-172-31-45-2 my-app]$ mv docker_compose.yml docker-compose.yml
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ docker compose up --build
[+] Building 9.8s (9/9) FINISHED                                                                         docker:default
 => [web internal] load build definition from Dockerfile                                                           0.0s
 => => transferring dockerfile: 489B                                                                               0.0s
 => [web internal] load metadata for docker.io/library/python:3.9-slim                                             2.1s
 => [web internal] load .dockerignore                                                                              0.0s
 => => transferring context: 2B                                                                                    0.0s
 => [web 1/4] FROM docker.io/library/python:3.9-slim@sha256:aeebfa2890da7819f1617ec9a5650669570ab0802e5f51063aa8b  3.7s
 => => resolve docker.io/library/python:3.9-slim@sha256:aeebfa2890da7819f1617ec9a5650669570ab0802e5f51063aa8b7499  0.0s
 => => sha256:455962325b3b9aa475b7bca59ae07fdfcf9b1dce45f91cd1b085bad325436790 5.30kB / 5.30kB                     0.0s
 => => sha256:8c7716127147648c1751940b9709b6325f2256290d3201662eca2701cadb2cdf 29.78MB / 29.78MB                   0.9s
 => => sha256:f5f7ec28452e804ee1d1d45474e792e0be5259616978b3fc3667919d55e9c4dc 4.25MB / 4.25MB                     0.8s
 => => sha256:1f4b7af3d5b25eb0481a754ca77829836842655e0c24f0fa373091a6c93deaa9 13.88MB / 13.88MB                   1.1s
 => => sha256:aeebfa2890da7819f1617ec9a5650669570ab0802e5f51063aa8b7499da1ed26 10.36kB / 10.36kB                   0.0s
 => => sha256:88121ab4ee1361adcc3a7b67462179d31d2897865ced5c32e04c46fd2519472b 1.74kB / 1.74kB                     0.0s
 => => sha256:5b8b459b5346e612e38807adbcb3cc8983b0caebc0251593ccd2a3fb5b64eb64 251B / 251B                         1.3s
 => => extracting sha256:8c7716127147648c1751940b9709b6325f2256290d3201662eca2701cadb2cdf                          1.4s
 => => extracting sha256:f5f7ec28452e804ee1d1d45474e792e0be5259616978b3fc3667919d55e9c4dc                          0.2s
 => => extracting sha256:1f4b7af3d5b25eb0481a754ca77829836842655e0c24f0fa373091a6c93deaa9                          0.9s
 => => extracting sha256:5b8b459b5346e612e38807adbcb3cc8983b0caebc0251593ccd2a3fb5b64eb64                          0.0s
 => [web internal] load build context                                                                              0.0s
 => => transferring context: 1.44kB                                                                                0.0s
 => [web 2/4] WORKDIR /app                                                                                         0.1s
 => [web 3/4] COPY . /app                                                                                          0.0s
 => [web 4/4] RUN pip install --no-cache-dir -r requirements.txt                                                   3.4s
 => [web] exporting to image                                                                                       0.2s
 => => exporting layers                                                                                            0.2s
 => => writing image sha256:731aafd919bd2a2fc36457487cd8ce3d57960bf330682c1cc3bb181fbce4d971                       0.0s
 => => naming to docker.io/library/my-app-web                                                                      0.0s
[+] Running 2/2
 ✔ Network my-app_default  Created                                                                                 0.1s
 ✔ Container my-app-web-1  Created                                                                                 0.1s
Attaching to web-1
web-1  | Traceback (most recent call last):
web-1  |   File "/app/app.py", line 1, in <module>
web-1  |     from flask import Flask
web-1  |   File "/usr/local/lib/python3.9/site-packages/flask/__init__.py", line 7, in <module>
web-1  |     from .app import Flask as Flask
web-1  |   File "/usr/local/lib/python3.9/site-packages/flask/app.py", line 28, in <module>
web-1  |     from . import cli
web-1  |   File "/usr/local/lib/python3.9/site-packages/flask/cli.py", line 18, in <module>
web-1  |     from .helpers import get_debug_flag
web-1  |   File "/usr/local/lib/python3.9/site-packages/flask/helpers.py", line 16, in <module>
web-1  |     from werkzeug.urls import url_quote
web-1  | ImportError: cannot import name 'url_quote' from 'werkzeug.urls' (/usr/local/lib/python3.9/site-packages/werkzeug/urls.py)
web-1 exited with code 1
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ vi requirements.txt
[ec2-user@ip-172-31-45-2 my-app]$
[ec2-user@ip-172-31-45-2 my-app]$ cat requirements.txt
Flask==2.0.3
Werkzeug==2.0.3

[ec2-user@ip-172-31-45-2 my-app]$ docker compose up --build
[+] Building 4.2s (9/9) FINISHED                                                                         docker:default
 => [web internal] load build definition from Dockerfile                                                           0.0s
 => => transferring dockerfile: 489B                                                                               0.0s
 => [web internal] load metadata for docker.io/library/python:3.9-slim                                             0.6s
 => [web internal] load .dockerignore                                                                              0.0s
 => => transferring context: 2B                                                                                    0.0s
 => [web internal] load build context                                                                              0.0s
 => => transferring context: 407B                                                                                  0.0s
 => [web 1/4] FROM docker.io/library/python:3.9-slim@sha256:aeebfa2890da7819f1617ec9a5650669570ab0802e5f51063aa8b  0.0s
 => CACHED [web 2/4] WORKDIR /app                                                                                  0.0s
 => [web 3/4] COPY . /app                                                                                          0.0s
 => [web 4/4] RUN pip install --no-cache-dir -r requirements.txt                                                   3.3s
 => [web] exporting to image                                                                                       0.2s
 => => exporting layers                                                                                            0.2s
 => => writing image sha256:6f0ccbf0275cf1d7fd5e743e19f2dad644a602293a7761699d66193ff1ea217e                       0.0s
 => => naming to docker.io/library/my-app-web                                                                      0.0s
[+] Running 1/1
 ✔ Container my-app-web-1  Recreated                                                                               0.1s
Attaching to web-1
web-1  |  * Serving Flask app 'app' (lazy loading)
web-1  |  * Environment: development
web-1  |  * Debug mode: on
web-1  |  * Running on all addresses.
web-1  |    WARNING: This is a development server. Do not use it in a production deployment.
web-1  |  * Running on http://172.19.0.2:5000/ (Press CTRL+C to quit)
web-1  |  * Restarting with stat
web-1  |  * Debugger is active!
web-1  |  * Debugger PIN: 140-726-541
web-1  | 49.37.220.194 - - [11/Oct/2025 21:01:54] "GET / HTTP/1.1" 200 -
web-1  | 49.37.220.194 - - [11/Oct/2025 21:01:54] "GET /favicon.ico HTTP/1.1" 404 -
web-1  |  * Detected change in '/app/app.py', reloading
web-1  |  * Restarting with stat
web-1  |  * Debugger is active!
web-1  |  * Debugger PIN: 140-726-541
web-1  | 147.185.132.192 - - [11/Oct/2025 21:04:19] "GET / HTTP/1.1" 200 -
web-1  | 49.37.220.194 - - [11/Oct/2025 21:04:21] "GET / HTTP/1.1" 200 -
web-1  | 49.37.220.194 - - [11/Oct/2025 21:04:22] "GET /favicon.ico HTTP/1.1" 404 -